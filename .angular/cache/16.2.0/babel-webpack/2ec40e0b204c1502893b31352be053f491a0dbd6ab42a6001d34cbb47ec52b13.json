{"ast":null,"code":"import { ShowdownConverter } from './showdown-converter.provider';\nimport * as i0 from \"@angular/core\";\n/**\n * A angular pipe to transform `Markdown` to `HTML`.\n *\n * ### Example\n *\n * Setup as standalone\n * ```typescript\n * import { NgModule } from '@angular/core';\n * import { ShowdownPipe } from 'ngx-showdown';\n *\n * @NgModule({\n *   declarations: [ ShowdownPipe ];\n * })\n * export class AppModule {}\n * ```\n *\n * Transform markdown value to html.\n * ```html\n * <input type=\"text\" placeholder=\"Name\" [(ngModel)]=\"name\"/>\n * <div [innerHTML]=\"'**Hello '+(name || 'nobody')+'!**' | showdown\">\n * ```\n *\n * Transform markdown value to html with `options`.\n * ```typescript\n * import * as Showdown from 'showdown';\n *\n * @Component({\n *   selector: 'some',\n *   template: `<div innerHTML=\"{{ text | showdown: options }}\"></div>`\n * })\n * export class SomeComponent {\n *   text: string = \"__Some Underline__\";\n *   options: Showdown.ShowdownOptions = { underline: true };\n *   // ...\n * }\n * ```\n */\nexport let ShowdownPipe = /*#__PURE__*/(() => {\n  class ShowdownPipe extends ShowdownConverter {\n    /**\n     * Transform markdown value to html.\n     *\n     * @param value - The markdown value to transform to html.\n     * @param options - A `Showdown` converter options.\n     * @returns Returns the transform result of `value` to html.\n     */\n    transform(value, options) {\n      this.setOptions(options);\n      return this.makeHtml(value);\n    }\n    static #_ = this.ɵfac = /*@__PURE__*/function () {\n      let ɵShowdownPipe_BaseFactory;\n      return function ShowdownPipe_Factory(t) {\n        return (ɵShowdownPipe_BaseFactory || (ɵShowdownPipe_BaseFactory = i0.ɵɵgetInheritedFactory(ShowdownPipe)))(t || ShowdownPipe);\n      };\n    }();\n    static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"showdown\",\n      type: ShowdownPipe,\n      pure: false\n    });\n  }\n  return ShowdownPipe;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}