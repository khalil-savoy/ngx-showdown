{"ast":null,"code":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/**\n * iterateObject\n * Iterates an object. Note the object field order may differ.\n *\n * @name iterateObject\n * @function\n * @param {Object} obj The input object.\n * @param {Function} fn A function that will be called with the current value, field name and provided object.\n * @return {Function} The `iterateObject` function.\n */\nfunction iterateObject(obj, fn) {\n  var i = 0,\n    keys = [];\n  if (Array.isArray(obj)) {\n    for (; i < obj.length; ++i) {\n      if (fn(obj[i], i, obj) === false) {\n        break;\n      }\n    }\n  } else if ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\" && obj !== null) {\n    keys = Object.keys(obj);\n    for (; i < keys.length; ++i) {\n      if (fn(obj[keys[i]], keys[i], obj) === false) {\n        break;\n      }\n    }\n  }\n}\nmodule.exports = iterateObject;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}