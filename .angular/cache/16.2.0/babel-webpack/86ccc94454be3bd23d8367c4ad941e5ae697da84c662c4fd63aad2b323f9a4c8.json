{"ast":null,"code":"\"use strict\";\n\nvar decodeHtml = require(\"html-encoder-decoder\").decode,\n  showdown = require(\"showdown\"),\n  hljs = require(\"highlight.js\"),\n  classAttr = 'class=\"';\n\n/**\n * showdownHighlight\n * Highlight the code in the showdown input.\n *\n * Examples:\n *\n * ```js\n * let converter = new showdown.Converter({\n *     extensions: [showdownHighlight]\n * })\n * ```\n *\n * Enable the classes in the `<pre>` element:\n *\n * ```js\n * let converter = new showdown.Converter({\n *     extensions: [showdownHighlight({ pre: true })]\n * })\n * ```\n *\n *\n * If you want to disable language [auto detection](https://highlightjs.org/usage/)\n * feature of hljs, change `auto_detection` flag as `false`. With this option\n * turned off, `showdown-highlight` will not process any codeblocks with no\n * language specified.\n *\n * ```js\n * let converter = new showdown.Converter({\n *     extensions: [showdownHighlight({ auto_detection: false })]\n * })\n * ```\n *\n * @name showdownHighlight\n * @function\n */\nmodule.exports = function showdownHighlight() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$pre = _ref.pre,\n    pre = _ref$pre === undefined ? false : _ref$pre,\n    _ref$auto_detection = _ref.auto_detection,\n    auto_detection = _ref$auto_detection === undefined ? true : _ref$auto_detection;\n  var filter = function filter(text, converter, options) {\n    var params = {\n      left: \"<pre><code\\\\b[^>]*>\",\n      right: \"</code></pre>\",\n      flags: \"g\"\n    };\n    var replacement = function replacement(wholeMatch, match, left, right) {\n      match = decodeHtml(match);\n      var lang = (left.match(/class=\\\"([^ \\\"]+)/) || [])[1];\n      if (!lang && !auto_detection) {\n        return wholeMatch;\n      }\n      if (left.includes(classAttr)) {\n        var attrIndex = left.indexOf(classAttr) + classAttr.length;\n        left = left.slice(0, attrIndex) + 'hljs ' + left.slice(attrIndex);\n      } else {\n        left = left.slice(0, -1) + ' class=\"hljs\">';\n      }\n      if (pre && lang) {\n        left = left.replace('<pre>', \"<pre class=\\\"\" + lang + \" language-\" + lang + \"\\\">\");\n      }\n      if (lang && hljs.getLanguage(lang)) {\n        return left + hljs.highlight(match, {\n          language: lang\n        }).value + right;\n      }\n      return left + hljs.highlightAuto(match).value + right;\n    };\n    return showdown.helper.replaceRecursiveRegExp(text, replacement, params.left, params.right, params.flags);\n  };\n  return [{\n    type: \"output\",\n    filter: filter\n  }];\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}