{"ast":null,"code":"import { ShowdownComponent } from 'ngx-showdown';\nimport * as Showdown from 'showdown';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/slide-toggle\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/list\";\nimport * as i9 from \"@angular/material/sidenav\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/tooltip\";\nimport * as i14 from \"../../../../src/showdown.component\";\nfunction EditorComponent_mat_list_item_4_mat_slide_toggle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-slide-toggle\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function EditorComponent_mat_list_item_4_mat_slide_toggle_1_Template_mat_slide_toggle_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const key_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.optionChange(key_r3, $event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.options[key_r3]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", key_r3, \" \");\n  }\n}\nfunction EditorComponent_mat_list_item_4_mat_form_field_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 5)(1, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function EditorComponent_mat_list_item_4_mat_form_field_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const key_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.optionChange(key_r3, $event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.options[key_r3])(\"placeholder\", key_r3);\n  }\n}\nfunction EditorComponent_mat_list_item_4_mat_form_field_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 5)(1, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function EditorComponent_mat_list_item_4_mat_form_field_3_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const key_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.optionChange(key_r3, $event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.options[key_r3])(\"placeholder\", key_r3);\n  }\n}\nfunction EditorComponent_mat_list_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\", 14);\n    i0.ɵɵtemplate(1, EditorComponent_mat_list_item_4_mat_slide_toggle_1_Template, 2, 2, \"mat-slide-toggle\", 15);\n    i0.ɵɵtemplate(2, EditorComponent_mat_list_item_4_mat_form_field_2_Template, 2, 2, \"mat-form-field\", 16);\n    i0.ɵɵtemplate(3, EditorComponent_mat_list_item_4_mat_form_field_3_Template, 2, 2, \"mat-form-field\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const key_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1.schema[key_r3].description)(\"ngSwitch\", ctx_r1.schema[key_r3].type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"integer\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"string\");\n  }\n}\nfunction EditorComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const flavor_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", flavor_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", flavor_r19, \" \");\n  }\n}\nexport let EditorComponent = /*#__PURE__*/(() => {\n  class EditorComponent {\n    constructor(http) {\n      this.http = http;\n      this.schema = Showdown.getDefaultOptions(false);\n      this.optionsKeys = Object.keys(this.schema);\n      this.flavors = ['allOn', 'ghost', 'github', 'original', 'vanilla'];\n      this.markdown = '';\n      this.sanitize = false;\n    }\n    ngOnInit() {\n      this.flavor = this.showdownComponent.getFlavor();\n      this.options = this.showdownComponent.getOptions();\n      this.http.get('./assets/example.md', {\n        responseType: 'text'\n      }).subscribe(res => this.markdown = res);\n    }\n    optionChange(key, value) {\n      this.showdownComponent.setOption(key, value);\n      this.showdownComponent.render();\n    }\n    flavorChange(flavor) {\n      if (flavor !== 'vanilla' && flavor !== 'allOn') {\n        this.showdownComponent.setFlavor('vanilla');\n      }\n      this.showdownComponent.setFlavor(flavor);\n      this.showdownComponent.render();\n    }\n    static #_ = this.ɵfac = function EditorComponent_Factory(t) {\n      return new (t || EditorComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditorComponent,\n      selectors: [[\"editor\"]],\n      viewQuery: function EditorComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(ShowdownComponent, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.showdownComponent = _t.first);\n        }\n      },\n      decls: 23,\n      vars: 7,\n      consts: [[1, \"editor-container\"], [\"fixedInViewport\", \"\", \"fixedTopGap\", \"50\", \"mode\", \"side\"], [\"config\", \"\"], [3, \"matTooltip\", \"ngSwitch\", 4, \"ngFor\", \"ngForOf\"], [\"matTooltip\", \"Enables html sanitize, it will sanitize the converter html output by `DomSanitizer`.\", 3, \"ngModel\", \"ngModelChange\"], [\"matLine\", \"\"], [\"placeholder\", \"Flavor\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", \"matLine\", \"\", 3, \"click\"], [1, \"editor-content\"], [1, \"editor-col\"], [1, \"editor-box\", 3, \"ngModel\", \"ngModelChange\"], [1, \"editor-box\", \"markdown-body\", 3, \"sanitize\", \"value\"], [\"mat-fab\", \"\", \"color\", \"primary\", 1, \"config-btn\", 3, \"click\"], [3, \"matTooltip\", \"ngSwitch\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngSwitchCase\"], [\"matLine\", \"\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"text\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [3, \"value\"]],\n      template: function EditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r20 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2)(3, \"mat-nav-list\");\n          i0.ɵɵtemplate(4, EditorComponent_mat_list_item_4_Template, 4, 5, \"mat-list-item\", 3);\n          i0.ɵɵelementStart(5, \"mat-list-item\")(6, \"mat-slide-toggle\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function EditorComponent_Template_mat_slide_toggle_ngModelChange_6_listener($event) {\n            return ctx.sanitize = $event;\n          });\n          i0.ɵɵtext(7, \" sanitize \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"mat-list-item\")(9, \"mat-form-field\", 5)(10, \"mat-select\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function EditorComponent_Template_mat_select_ngModelChange_10_listener($event) {\n            return ctx.flavorChange($event);\n          });\n          i0.ɵɵtemplate(11, EditorComponent_mat_option_11_Template, 2, 2, \"mat-option\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"mat-list-item\")(13, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_13_listener() {\n            i0.ɵɵrestoreView(_r20);\n            const _r0 = i0.ɵɵreference(2);\n            return i0.ɵɵresetView(_r0.close());\n          });\n          i0.ɵɵtext(14, \"Close\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(15, \"mat-sidenav-content\", 9)(16, \"div\", 10)(17, \"textarea\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function EditorComponent_Template_textarea_ngModelChange_17_listener($event) {\n            return ctx.markdown = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\", 10);\n          i0.ɵɵelement(19, \"showdown\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_20_listener() {\n            i0.ɵɵrestoreView(_r20);\n            const _r0 = i0.ɵɵreference(2);\n            return i0.ɵɵresetView(_r0.toggle());\n          });\n          i0.ɵɵelementStart(21, \"mat-icon\");\n          i0.ɵɵtext(22, \"settings\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.optionsKeys);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.sanitize);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.flavor);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.flavors);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.markdown);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"sanitize\", ctx.sanitize)(\"value\", ctx.markdown);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgSwitch, i2.NgSwitchCase, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatInput, i5.MatFormField, i6.MatSlideToggle, i7.MatButton, i7.MatFabButton, i8.MatNavList, i8.MatListItem, i9.MatSidenav, i9.MatSidenavContainer, i9.MatSidenavContent, i10.MatIcon, i11.MatSelect, i12.MatOption, i13.MatTooltip, i14.ShowdownComponent],\n      styles: [\".editor-container[_ngcontent-%COMP%]{height:100%;background-color:#eeeeee73}.editor-content[_ngcontent-%COMP%]{display:flex;flex-direction:row}.editor-col[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;flex:1}.editor-box[_ngcontent-%COMP%]{height:100%;overflow-y:hidden;resize:none;border:none;padding:10px;margin:15px;background-color:#fff}.config-btn[_ngcontent-%COMP%]{position:fixed;bottom:10%;margin-left:1%}\"]\n    });\n  }\n  return EditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}